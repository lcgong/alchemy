upstream webapp_nodes {
  server 127.0.0.1:8800;
}

upstream busiserv_nodes {
  server 127.0.0.1:8700;
}

server {
  listen 80;
  server_name alchemy.29th.cn;

  # For letsencrypt to authenticate domain
  location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /alchemy/secrets/letsencrypt/www;
  }
  location = /.well-known/acme-challenge/ { # not 403
      return 404;
  }

  location / {
      return 301 https://$host$request_uri; # auto-redirect to https
  }
}

server {
    listen 443 ssl;
    server_name alchemy.29th.cn;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /alchemy/secrets/letsencrypt/config/keys/dhparams.pem;
    ssl_certificate /alchemy/secrets/letsencrypt/config/live/alchemy.29th.cn/fullchain.pem;
    ssl_certificate_key /alchemy/secrets/letsencrypt/config/live/alchemy.29th.cn/privkey.pem;


    server_tokens off;
    client_max_body_size 50M;
    #access_log /alchemy/logs/ngnix.access.log main;
    #error_log  /alchemy/logs/ngnix.error.log main;

    location /oauth/ {
      proxy_pass http://busiserv_nodes;

      proxy_pass_header Server;
      proxy_redirect off;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    location /api/ {
      proxy_pass http://busiserv_nodes;

      proxy_pass_header Server;
      proxy_redirect off;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    location / {
      proxy_pass http://webapp_nodes;

      proxy_pass_header Server;
      proxy_redirect off;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }
}
